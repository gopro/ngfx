CMAKE_GENERATOR = {CMAKE_GENERATOR}
CMAKE_SYSTEM_VERSION = {CMAKE_SYSTEM_VERSION}
SHADERC_VERSION = {SHADERC_VERSION}
RENDERDOC_VERSION = {RENDERDOC_VERSION}
VCPKG_DIR = {VCPKG_DIR}
VCPKG_TRIPLET = {VCPKG_TRIPLET}
PKGCONF_VERSION = {PKGCONF_VERSION}
PREFIX = {PREFIX}
UNZIP = {UNZIP}
WGET = {WGET}
MKDIR = {MKDIR}
BUILDDIR = {BUILDDIR}

rule SHELL_COMMAND
  command = pwsh.exe -c set ProgressPreference "SilentlyContinue"; if (!(Get-Item -Path $out -ea 0)) {{ $COMMAND && echo $$null >> $out }}
  description = $DESC
  pool = console

build .nlohmann-json-installed: SHELL_COMMAND
    COMMAND = ${{MKDIR}} .\json\include && $
    ${{WGET}} https://raw.githubusercontent.com/nlohmann/json/develop/single_include/nlohmann/json.hpp -OutFile json/include/json.hpp
build nlohmann-json: phony .nlohmann-json-installed

build .stb-installed: SHELL_COMMAND
    COMMAND = ${{MKDIR}} .\stb && $
    ${{WGET}} https://raw.githubusercontent.com/nothings/stb/master/stb_image.h -OutFile stb/stb_image.h && $
    ${{WGET}} https://raw.githubusercontent.com/nothings/stb/master/stb_image_write.h -OutFile stb/stb_image_write.h
build stb: phony .stb-installed

build .glm-installed: SHELL_COMMAND
    COMMAND = ${{WGET}} https://github.com/g-truc/glm/releases/download/0.9.9.8/glm-0.9.9.8.zip -OutFile glm-0.9.9.8.zip && $
    ${{UNZIP}} -d glm-0.9.9.8 glm-0.9.9.8.zip
build glm: phony .glm-installed

build .d3dx12-installed: SHELL_COMMAND
    COMMAND = ${{MKDIR}} .\d3dx12 && $
    ${{WGET}} https://raw.githubusercontent.com/microsoft/DirectX-Graphics-Samples/v10.0.17763.0/Libraries/D3DX12/d3dx12.h -OutFile d3dx12/d3dx12.h
build d3dx12: phony .d3dx12-installed

build .glfw-installed: SHELL_COMMAND
    COMMAND = ${{WGET}} https://github.com/glfw/glfw/releases/download/3.3.2/glfw-3.3.2.bin.WIN64.zip -OutFile glfw-3.3.2.bin.WIN64.zip && $
    ${{UNZIP}} glfw-3.3.2.bin.WIN64.zip
build glfw: phony .glfw-installed

build .pkgconf-installed: SHELL_COMMAND
    COMMAND = ${{WGET}} https://distfiles.dereferenced.org/pkgconf/pkgconf-${{PKGCONF_VERSION}}.tar.gz -OutFile pkgconf-${{PKGCONF_VERSION}}.tar.gz && $
    tar xzf pkgconf-${{PKGCONF_VERSION}}.tar.gz && $
    pushd pkgconf-${{PKGCONF_VERSION}} && $
    meson.exe setup --backend vs --buildtype=release --prefix="${{PREFIX}}" . ${{BUILDDIR}}/pkgconf -Dtests=false && $
    meson.exe compile -C ${{BUILDDIR}}/pkgconf -j8 && $
    meson.exe install -C ${{BUILDDIR}}/pkgconf && $
    popd
build pkgconf: phony .pkgconf-installed

build .VulkanSDK-installed: SHELL_COMMAND
    COMMAND = ${{WGET}} https://sdk.lunarg.com/sdk/download/latest/windows/vulkan-sdk.exe -OutFile VulkanSDK-Installer.exe && $
    ./VulkanSDK-Installer.exe /S
build VulkanSDK: phony .VulkanSDK-installed

build .spirv-cross-installed: SHELL_COMMAND
    COMMAND = pushd ${{VCPKG_DIR}} && $
    .\vcpkg.exe install --triplet ${{VCPKG_TRIPLET}} spirv-cross && $
    popd
build spirv-cross: phony .spirv-cross-installed

build .shaderc-${{SHADERC_VERSION}}-installed: SHELL_COMMAND
    COMMAND = ${{WGET}} https://github.com/google/shaderc/archive/v${{SHADERC_VERSION}}.tar.gz -OutFile v${{SHADERC_VERSION}}.tar.gz && $
    tar xzf v${{SHADERC_VERSION}}.tar.gz $
    && pushd shaderc-${{SHADERC_VERSION}} && $
    python .\utils\git-sync-deps && $
    cmake.exe -S . -B ${{BUILDDIR}}/shaderc -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="${{PREFIX}}" -DCMAKE_MSVC_RUNTIME_LIBRARY:STRING=MultiThreadedDLL -DCMAKE_SYSTEM_VERSION='${{CMAKE_SYSTEM_VERSION}}' -G\"${{CMAKE_GENERATOR}}\" -DSHADERC_SKIP_TESTS=ON && $
    cmake.exe --build ${{BUILDDIR}}/shaderc --config Release -j8 && $
    cmake.exe --install ${{BUILDDIR}}/shaderc && $
    popd
build shaderc-${{SHADERC_VERSION}}: phony .shaderc-${{SHADERC_VERSION}}-installed

build .renderdoc-${{RENDERDOC_VERSION}}-installed: SHELL_COMMAND
    COMMAND = ${{WGET}} https://renderdoc.org/stable/${{RENDERDOC_VERSION}}/RenderDoc_${{RENDERDOC_VERSION}}_64.zip -OutFile RenderDoc_${{RENDERDOC_VERSION}}_64.zip && $
    ${{UNZIP}} -d . RenderDoc_${{RENDERDOC_VERSION}}_64.zip
build renderdoc-${{RENDERDOC_VERSION}}: phony .renderdoc-${{RENDERDOC_VERSION}}-installed

build all: phony nlohmann-json stb glm d3dx12 glfw spirv-cross shaderc-${{SHADERC_VERSION}} pkgconf renderdoc-${{RENDERDOC_VERSION}}

default all
